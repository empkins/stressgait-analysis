[project]
name = "stressgait_analysis"
version = "0.1.0"
description = ""
authors = [{ name = "Robert Richer", email = "robert.richer@fau.de" }]
requires-python = ">=3.9,<4.0"
readme = "README.md"
license = "MIT"
dependencies = [
    "pandas>=2.2.3,<3",
    "biopsykit",
]

[dependency-groups]
dev = [
    "pytest>=8.3.4,<9",
    "pytest-cov>=6.0.0,<7",
    "ipykernel>=6.29.5,<7",
    "ruff>=0,<1",
    "ipympl>=0.9.6,<0.10",
    "poethepoet>=0.32.1",
    "numpydoc>=1.8.0",
]

[tool.uv.sources]
#biopsykit = { path = "/home/rzlin/ys64ofuj/BioPsyKit/", editable = true }
biopsykit = { git = "https://github.com/mad-lab-fau/BioPsyKit.git", branch = "main" }


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.black]
line-length = 120
target-version = ['py310']
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | docs
    | build
    | dist
    | \.virtual_documents
  )/
)
'''

[tool.poe.tasks]
_format = "ruff format ."
_auto_fix = "ruff check . --fix-only --show-fixes --exit-zero"
_auto_fix_unsafe = "ruff check . --fix-only --show-fixes --exit-zero --unsafe-fixes"
format = ["_auto_fix", "_format"]
format_unsafe = ["_auto_fix_unsafe", "_format"]
lint = { cmd = "ruff check src/stressgait_analysis --fix", help = "Lint all files with ruff." }
_lint_ci = "ruff check src/stressgait_analysis --output-format=github"
_check_format = "ruff format . --check"
ci_check = { sequence = ["_check_format", "_lint_ci"], help = "Check all potential format and linting issues." }
test = { cmd = "pytest --cov=stressgait_analysis --cov-report=term-missing --cov-report=xml", help = "Run Pytest with coverage." }
version = { "script" = "_tasks:task_update_version" }
conf_jupyter = { cmd = "python -m ipykernel install --user --name stressgait_analysis", help = "Add a new jupyter kernel for the project." }

remove_jupyter = { cmd = "jupyter kernelspec uninstall stressgait_analysis", help = "Remove the project specific jupyter kernel."}
experiment = { script = "_tasks:task_new_experiment()", help = "Create the boilerplate for a new experiment in the experiment subfolder."}
